@model ABCD_Admin.Models.Order

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Required meta tags-->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="au theme template">
    <meta name="keywords" content="au theme template">

    <!-- Title Page-->
    <title>Edit Orders</title>

    <!-- Fontfaces CSS-->
    <link href="~/css/font-face.css" rel="stylesheet" media="all">
    <link href="~/vendor/font-awesome-4.7/css/font-awesome.min.css" rel="stylesheet" media="all">
    <link href="~/vendor/font-awesome-5/css/fontawesome-all.min.css" rel="stylesheet" media="all">
    <link href="~/vendor/mdi-font/css/material-design-iconic-font.min.css" rel="stylesheet" media="all">

    <!-- Bootstrap CSS-->
    <link href="~/vendor/bootstrap-4.1/bootstrap.min.css" rel="stylesheet" media="all">

    <!-- Vendor CSS-->
    <link href="~/vendor/animsition/animsition.min.css" rel="stylesheet" media="all">
    <link href="~/vendor/bootstrap-progressbar/bootstrap-progressbar-3.3.4.min.css" rel="stylesheet" media="all">
    <link href="~/vendor/wow/animate.css" rel="stylesheet" media="all">
    <link href="~/vendor/css-hamburgers/hamburgers.min.css" rel="stylesheet" media="all">
    <link href="~/vendor/slick/slick.css" rel="stylesheet" media="all">
    <link href="~/vendor/select2/select2.min.css" rel="stylesheet" media="all">
    <link href="~/vendor/perfect-scrollbar/perfect-scrollbar.css" rel="stylesheet" media="all">

    <!-- Main CSS-->
    <link href="~/css/theme.css" rel="stylesheet" media="all">

</head>
<body class="animsition">
    <div class="section__content section__content--p30">
        <div class="container-fluid">
            <h3>Orders</h3>
            <div class="row">
                <div class="col-sm-12">
                    <div class="card">
                        <div class="card-header">
                            <strong>Edit</strong>
                        </div>
                        <div class="card-body">
                            <div class="form-group">
                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.orderId)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.customerId, "customerId", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <input type="text" class="form-control" readonly value="@Model.customerId" />
                                        </div>
                                    </div>

                                    @Html.HiddenFor(model => model.employeeId)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.totalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <input type="text" class="form-control" readonly value="@Model.totalPrice" />
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.isConfirm, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @if (Model.isPurchased)
                                                {
                                                    @Html.EditorFor(model => model.isConfirm)
                                                    @Html.ValidationMessageFor(model => model.isConfirm, "", new { @class = "text-danger" })
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(model => model.isConfirm, new { htmlAttributes = new { @disabled = "disabled" } })
                                                    @Html.ValidationMessageFor(model => model.isConfirm, "", new { @class = "text-danger" })
                                                }
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.isPurchased, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.isPurchased)
                                                @Html.ValidationMessageFor(model => model.isPurchased, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.bookingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <input type="text" class="form-control" readonly value="@Model.bookingDate" />
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-offset-3 col-md-10">
                                            <input type="submit" value="Save" class="btn btn-default" />
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="form-group">
                                @Html.ActionLink("Back to List", "Index")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Jquery JS-->
    <script src="~/vendor/jquery-3.2.1.min.js"></script>
    <!-- Bootstrap JS-->
    <script src="~/vendor/bootstrap-4.1/popper.min.js"></script>
    <script src="~/vendor/bootstrap-4.1/bootstrap.min.js"></script>
    <!-- Vendor JS       -->
    <script src="~/vendor/slick/slick.min.js"></script>
    <script src="~/vendor/wow/wow.min.js"></script>
    <script src="~/vendor/animsition/animsition.min.js"></script>
    <script src="~/vendor/bootstrap-progressbar/bootstrap-progressbar.min.js"></script>
    <script src="~/vendor/counter-up/jquery.waypoints.min.js"></script>
    <script src="~/vendor/counter-up/jquery.counterup.min.js"></script>
    <script src="~/vendor/circle-progress/circle-progress.min.js"></script>
    <script src="~/vendor/perfect-scrollbar/perfect-scrollbar.js"></script>
    <script src="~/vendor/chartjs/Chart.bundle.min.js"></script>
    <script src="~/vendor/select2/select2.min.js"></script>

    <script>
        var isPurchasedCheckbox = document.querySelector('input[name="isPurchased"]');
        var isConfirmCheckbox = document.querySelector('input[name="isConfirm"]');

        if (!isPurchasedCheckbox.checked) {
            isConfirmCheckbox.disabled = true;
        }

        // Listen for changes in isPurchased checkbox and update the isConfirm checkbox accordingly
        isPurchasedCheckbox.addEventListener('change', function () {
            if (isPurchasedCheckbox.checked) {
                isConfirmCheckbox.disabled = false;
            } else {
                isConfirmCheckbox.checked = false;
                isConfirmCheckbox.disabled = true;
            }
        });
    </script>


</body>

</html>

